[package]
name = "dam"
version = "0.1.0"
edition = "2021"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
num = "0.4.0"
ndarray = "0.15.6"
dam-macros = { version = "0.1.0", path = "dam-macros" }
linkme = "0.3.12"
serde = "1.0.171"
serde_json = "1.0.103"
enum_dispatch = "0.3.12"
petgraph = "0.6.3"
rustc-hash = "1.1.0"
half = "2.4.0"

# For running different thread priorities and enabling FIFO Execution
thread-priority = "0.13.1"

# For running tests
rand = "0.8.5"
thiserror = "1.0.49"
graphviz-rust = { version = "0.6.6", optional = true }
derive_builder = "0.12.0"
cfg-if = "1.0.0"
enum_delegate = "0.2.0"
derive_more = "0.99.17"
bson = "2.7.0"
crossbeam = { version = "0.8.4" }
may = { git = "https://github.com/pyprogrammer/may.git", optional = true }
parking_lot = "0.12.1"
fastrand = "2.0.1"

[features]
default = ["dot", "log-mongo", "coroutines"]
dot = ["dep:graphviz-rust"]
log-mongo = ["dep:mongodb", "logging"]
test-log-mongo = ["log-mongo"]
logging = []
doc-cfg = []

## Backs channels with unbounded channels instead of bounded channels
unbounded-channels = []

## Executes in a cycle-by-cycle manner, terrible for performance.
## The only point of this flag is to pretend like we're executing cycle-by-cycle.
cycle-like = []

## use os-threads as the form of parallelism
os-threads = []

## use may coroutines as the primary form of parallelism
coroutines = ["dep:may"]

[dependencies.mongodb]
version = "2.7.0"
default-features = false
optional = true
## Have to use openssl-tls for cross compilation and wsl2.
features = ["sync", "openssl-tls"]


[dev-dependencies]
criterion = "0.5.1"

[profile.release-with-debug]
inherits = "release"
debug = 1
lto = "thin"
codegen-units = 1

[profile.dev.build-override]
codegen-units = 1
opt-level = 3
debug = 1

[[bench]]
name = "benchmark_templates"
harness = false

[[bench]]
name = "benchmark_sst"
harness = false
